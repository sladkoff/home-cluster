---
apiVersion: v1
kind: Service
metadata:
  name: nginx-fileshare
  namespace: media
spec:
  type: NodePort
  selector:
    app: nginx-fileshare
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: nginx-fileshare-pv
  namespace: media
  labels:
    type: local
    app: nginx-fileshare
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/root/k8s_volumes/nginx-fileshare"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-fileshare-pvc
  namespace: media
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      app: nginx-fileshare
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-fileshare
  namespace: media
spec:
  selector:
    matchLabels:
      app: nginx-fileshare
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-fileshare
    spec:
      containers:
        - name: nginx-fileshare
          image: nginx:1.15
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: NGINX_HOST
              value: "dl.sldk.de"
            - name: NGINX_PORT
              value: "80"
          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: nginx-fileshare-pv-storage
      volumes:
        - name: nginx-fileshare-pv-storage
          persistentVolumeClaim:
            claimName: nginx-fileshare-pvc
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-fileshare-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/ssl-force-host: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: dl.sldk.de
      http:
        paths:
          - backend:
              serviceName: nginx-fileshare
              servicePort: 80